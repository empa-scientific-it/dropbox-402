# https://taskfile.dev

version: "3"

dotenv:
  - ".env"

tasks:
  clean:
    cmds:
      - docker compose stop
      - docker compose rm -f
  prepare_dirs:
    dir: ./store
    cmds:
      - mkdir -p ./store/incoming-esaf/
      - mkdir -p ./openbis/src/esaf/lib/
    status:
      - test -d  ./store/incoming-esaf/
    method: timestamp
    run: when_changed
  build_dropbox:
    deps:
      - prepare_dirs
    sources:
      - ./app/**/*.kt
      - ./app/src/main/resources/plugin.properties
    cmds:
      - gradle buildFatJar
    run: when_changed
    interactive: true
    generates:
      - ./openbis/src/esaf/lib/app-all.jar
  copy_jar:
    deps:
      - build_dropbox
    cmds:
        -  cp ./app/src/main/resources/plugin.properties ./openbis/src/esaf/
        -  cp ./app/build/libs/app-all.jar ./openbis/src/esaf/lib/
  build:
    cmds:
      - docker compose build
    sources:
      - docker_compose.yml
      - initialiser/Dockerfile
      - openbis/Dockerfile
    deps:
      - prepare_dirs
  start_openbis:
    cmds:
      - docker compose up  openbis --no-deps --no-recreate --wait
    status:
      -  docker compose ps openbis -q
      - ./openbis/check_health.sh https://${OPENBIS_HOST}:${OPENBIS_PORT}
    run: when_changed
  change_store_permissions:
    cmds:
      - docker compose exec openbis chmod 777 ${DSS_PATH}/incoming-collection
    deps:
      - start_openbis
    status:
      - docker compose exec openbis stat -c '%a' ${DSS_PATH}/incoming-collection | grep -q 2777
    run: when_changed

  initialise_masterdata:
    cmds:
      - docker compose run initialiser python3 ./initialise_masterdata.py -s https://openbis -u ${OPENBIS_USER} -p ${OPENBIS_PASSWORD}
    deps:
      - start_openbis
    sources:
      - initialiser/initialise_masterdata.py
    preconditions:
      - ./openbis/check_health.sh https://${OPENBIS_HOST}:${OPENBIS_PORT}
    status:
      - docker compose run initialiser python3 ./initialise_masterdata.py -s https://openbis -u ${OPENBIS_USER} -p ${OPENBIS_PASSWORD} --check
    run: when_changed
  restart_dss:
    sources:
      - ./openbis/src/esaf/lib/*.jar
    deps:
      - start_openbis
      - initialise_masterdata
      - build_dropbox
    cmds:
      - docker compose stop openbis
      - docker compose up openbis --wait
      - touch .dss_started
    generates:
      - .dss_started
    interactive: true
    run: when_changed

  move:
    cmds:
      - mv $(./make_upload.sh ./resources/log.doc) ./store/incoming-esaf
    sources:
      - .dss_started
    run: always
    deps:
      - change_store_permissions
      - prepare_dirs
      - restart_dss

  follow_logs:
    cmds:
      - docker compose exec openbis tail -n 200 /home/openbis/openbis_state/dss_logs/startup_log.txt -n 200 /home/openbis/openbis_state/dss_logs/datastore_server_log.txt -n 200 /home/openbis/openbis_state/dss_logs/datastore_server_log.txt
    deps:
      - move
